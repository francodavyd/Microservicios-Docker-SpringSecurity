spring.application.name=pedidos-sv
server.port=${PORT:${SERVER_PORT:0}}
spring.datasource.url= jdbc:mysql://localhost:3306/pedido_db?serverTimezone=UTC
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.datasource.username= root
eureka.client.service-url.defaultZone= http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
security.jwt.private.key = ${PRIVATE_KEY}
security.jwt.user.generator = ${GENERATOR}

# Configuración compartida para todas las instancias
# Habilita el indicador de salud para backendA en Actuator
resilience4j.circuitbreaker.configs.shared.registerHealthIndicator=true
# Tamaño de la ventana deslizante basada en 10 llamadas
resilience4j.circuitbreaker.configs.shared.slidingWindowSize=10
# Número de llamadas permitidas en estado half-open, se permiten 3 llamadas de prueba para comprobar el estado del servicio
resilience4j.circuitbreaker.configs.shared.permittedNumberOfCallsInHalfOpenState=3
# La ventana deslizante se basa en tiempo en lugar de número de llamadas
resilience4j.circuitbreaker.configs.shared.slidingWindowType=TIME_BASED
# Mínimo de 5 llamadas necesarias antes de calcular la tasa de fallos
resilience4j.circuitbreaker.configs.shared.minimumNumberOfCalls=5
# Duración que el Circuit Breaker permanecerá abierto (5 segundos)
resilience4j.circuitbreaker.configs.shared.waitDurationInOpenState=5s
# El Circuit Breaker se abrirá si el porcentaje de fallos excede el 50%
resilience4j.circuitbreaker.configs.shared.failureRateThreshold=50
# Tamaño del buffer de eventos (por ejemplo, cambios de estado)
resilience4j.circuitbreaker.configs.shared.eventConsumerBufferSize=10

resilience4j.circuitbreaker.instances.emailCB.baseConfig=shared

resilience4j.circuitbreaker.instances.pagoCB.baseConfig=shared

resilience4j.circuitbreaker.instances.productoCB.baseConfig=shared
